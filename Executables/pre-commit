#!/bin/sh
# Pre-commit hook for GitHub Desktop workflow

# Determine current branch name
branch=$(git rev-parse --abbrev-ref HEAD)
role=$(echo "$branch" | cut -d'/' -f2)

# Get the list of staged files
staged_files=$(git diff --cached --name-only)

# Helper function to block commit with a message
block_commit() {
  echo "‚ùå $1"
  echo "Blocked: $2"
  exit 1
}

# If no staged files, exit normally
[ -z "$staged_files" ] && exit 0

# Check staged files based on role
echo "üîç Checking staged files for role '$role'..."

for file in $staged_files; do
  case "$role" in
    code)
      if echo "$file" | grep -q '\.uasset$' && ! echo "$file" | grep -q '^Content/Blueprints/'; then
        block_commit "Programmers can only commit .uasset in Content/Blueprints/" "$file"
      fi
      ;;
    art)
      if ! echo "$file" | grep -qE '\.(uasset|fbx|png|jpg|tga)$'; then
        block_commit "Artists can only commit art-related files (.uasset, .fbx, .png, .jpg, .tga)" "$file"
      fi
      ;;
    layout)
      if ! echo "$file" | grep -q '\.umap$'; then
        block_commit "Layouters can only commit .umap files" "$file"
      fi
      ;;
  esac
done

# Check that the commit message starts with an allowed prefix
# This works even in GitHub Desktop by looking at .git/COMMIT_EDITMSG
commit_msg_file=".git/COMMIT_EDITMSG"
if [ -f "$commit_msg_file" ]; then
  msg=$(head -n1 "$commit_msg_file")
  if ! echo "$msg" | grep -qE '^(feat|fix|art|layout|refactor|docs):\ '; then
    echo "‚ùå Commit message must start with one of: feat:, fix:, art:, layout:, refactor:, docs:"
    echo "üí° Example: art: added fire texture for goblin"
    exit 1
  fi
fi

echo "‚úÖ All staged files and commit message passed checks."
exit 0
